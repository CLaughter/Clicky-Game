{"version":3,"sources":["components/Header/index.js","components/Result/index.js","components/Image/index.js","App.js","index.js"],"names":["Header","props","className","score","totalScore","Result","correct","Images","src","image","imgURL","alt","onClick","clicked","id","App","state","images","imagesData","clickedId","shuffleImages","find","isClicked","setState","resetGame","prevState","updatedImages","map","newScore","newTotalScore","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","Won","this","key","Image","Component","ReactDOM","render","document","getElementById"],"mappings":"sxBAaeA,MAVf,SAAgBC,GACZ,OACI,gCACI,yBAAKC,UAAU,SAAf,mBACA,yBAAKA,UAAU,cAAf,cAAwCD,EAAME,MAA9C,mBAAqEF,EAAMG,c,MCiCxEC,MArCf,SAAgBJ,GACZ,OAAsB,OAAlBA,EAAMK,QAEF,yBAAKJ,UAAU,UACX,yBAAKA,UAAU,SACX,0BAAMA,UAAU,aAAhB,6CAMa,QAAlBD,EAAMK,QAET,yBAAKJ,UAAU,UACX,yBAAKA,UAAU,SACX,0BAAMA,UAAU,OAAhB,YACA,iEAMR,yBAAKA,UAAU,UACVD,EAAMK,QACH,yBAAKJ,UAAU,SACX,0BAAMA,UAAU,WAAhB,aAGJ,yBAAKA,UAAU,SACX,0BAAMA,UAAU,SAAhB,iB,MCjBTK,MAZf,SAAgBN,GACd,OACE,yBAAKC,UAAU,iBACb,yBACEM,IAAG,cAASP,EAAMQ,MAAMC,QACxBC,IAAI,gBACJC,QAAS,kBAAMX,EAAMY,QAAQZ,EAAMQ,MAAMK,S,OCqGlCC,E,2MAtGXC,MAAQ,CACJC,OAAQC,EACRf,MAAO,EACPC,WAAY,EACZE,QAAS,M,EAGbO,QAAU,SAAAM,GAMN,GALA,EAAKC,cAAc,EAAKJ,MAAMC,QACT,EAAKD,MAAMC,OAAOI,MACnC,SAAAZ,GAAK,OAAIA,EAAMK,KAAOK,KAGTG,UAEb,OADA,EAAKC,SAAS,CAAEjB,SAAS,IAClB,EAAKkB,WAAU,GACf,EAAKR,MAAMb,MAAQ,IAC5B,EAAKoB,SAAS,CAAEnB,WAAY,EAAKY,MAAMb,MAAQ,IAC/C,EAAKqB,WAAU,IAEb,EAAKD,UAAS,SAAAE,GACV,IAAMC,EAAgBD,EAAUR,OAAOU,KAAI,SAAAlB,GAIvC,OAHIA,EAAMK,KAAOK,IACbV,EAAMa,WAAY,GAEfb,KAGPmB,EAAWH,EAAUtB,MAAQ,EAC7B0B,EAAgBJ,EAAUrB,WAK9B,OAJIwB,EAAWH,EAAUrB,aACrByB,EAAgBD,GAGb,CACHX,OAAQS,EACRvB,MAAOyB,EACPxB,WAAYyB,EACZvB,QAAS,Y,EAMzBc,cAAgB,SAAAU,GAIZ,IAHA,IACIC,EACAC,EAFAC,EAAeH,EAAMI,OAGlB,IAAMD,GACTD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAGzCF,EAAiBD,EAFjBG,GAAgB,GAGhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAEzB,EAAKR,SAAS,CACVN,OAAQa,K,EAIhBN,UAAY,SAACc,GACT,EAAKf,UAAS,SAAAE,GAOV,MAAO,CACHR,OAPkBQ,EAAUR,OAAOU,KAAI,SAAAlB,GAIvC,OAHIA,EAAMa,YACNb,EAAMa,WAAY,GAEfb,KAIPN,MAAO,EACPG,UAAUgC,GAAM,W,wEAKlB,IAAD,OACL,OACI,6BACI,kBAAC,EAAD,CACInC,MAAOoC,KAAKvB,MAAMb,MAClBC,WAAYmC,KAAKvB,MAAMZ,aAE3B,kBAAC,EAAD,CAAQoC,IAAKD,KAAKvB,MAAMb,MAAOG,QAASiC,KAAKvB,MAAMV,UACnD,yBAAKJ,UAAU,aACX,yBAAKA,UAAU,UACVqC,KAAKvB,MAAMC,OAAOU,KAAI,SAAAlB,GAAK,OACxB,kBAACgC,EAAD,CACID,IAAK/B,EAAMK,GACXD,QAAS,EAAKA,QACdJ,MAAOA,c,GA5FrBiC,aCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5a3d8d50.chunk.js","sourcesContent":["import React from 'react'\r\nimport './style.css'\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <header>\r\n            <div className=\"title\" >Hog Memory Game</div>\r\n            <div className=\"scoreboard\">Hog Score: {props.score} | Total Score: {props.totalScore}</div>\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Result(props) {\r\n    if (props.correct === null) {\r\n        return (\r\n            <div className=\"result\">\r\n                <div className=\"spans\">\r\n                    <span className=\"guessGame\">\r\n                        Try not to select the same image twice.\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (props.correct === \"win\") {\r\n        return (\r\n            <div className=\"result\">\r\n                <div className=\"spans\">\r\n                    <span className=\"win\">YWinner!</span>\r\n                    <span>Click an image to play again!</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"result\">\r\n                {props.correct ? (\r\n                    <div className=\"spans\">\r\n                        <span className=\"correct\">Awesome!</span>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"spans\">\r\n                        <span className=\"wrong\">Play again</span>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Result;","import React from 'react'\r\nimport './style.css'\r\n\r\nfunction Images(props) {\r\n  return (\r\n    <div className='img-container'>\r\n      <img \r\n        src={`img/${props.image.imgURL}`} \r\n        alt='HDMotorcycles' \r\n        onClick={() => props.clicked(props.image.id)}>\r\n      </img>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Images","import React, { Component } from \"react\";\n\nimport Header from \"./components/Header\";\nimport Result from \"./components/Result\";\nimport Image from \"./components/Image\";\nimport imagesData from \"./Images.json\";\n\nclass App extends Component {\n    state = {\n        images: imagesData,\n        score: 0,\n        totalScore: 0,\n        correct: null\n    };\n\n    clicked = clickedId => {\n        this.shuffleImages(this.state.images);\n        const clickedImage = this.state.images.find(\n            image => image.id === clickedId\n        );\n\n        if (clickedImage.isClicked) {\n            this.setState({ correct: false });\n            return this.resetGame(false);\n        } else if (this.state.score > 10) {\n          this.setState({ totalScore: this.state.score + 1})\n          this.resetGame(true)\n        } else {\n            this.setState(prevState => {\n                const updatedImages = prevState.images.map(image => {\n                    if (image.id === clickedId) {\n                        image.isClicked = true;\n                    }\n                    return image;\n                });\n\n                let newScore = prevState.score + 1;\n                let newTotalScore = prevState.totalScore;\n                if (newScore > prevState.totalScore) {\n                    newTotalScore = newScore;\n                }\n\n                return {\n                    images: updatedImages,\n                    score: newScore,\n                    totalScore: newTotalScore,\n                    correct: \"true\"\n                };\n            });\n        }\n    };\n\n    shuffleImages = array => {\n        let currentIndex = array.length,\n            temporaryValue,\n            randomIndex;\n        while (0 !== currentIndex) {\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n        this.setState({\n            images: array\n        });\n    };\n\n    resetGame = (Won) => {\n        this.setState(prevState => {\n            const updatedImages = prevState.images.map(image => {\n                if (image.isClicked) {\n                    image.isClicked = false;\n                }\n                return image;\n            });\n            return {\n                images: updatedImages,\n                score: 0,\n                correct: (Won ? \"win\" : false)\n            };\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <Header\n                    score={this.state.score}\n                    totalScore={this.state.totalScore}\n                />\n                <Result key={this.state.score} correct={this.state.correct} />\n                <div className=\"container\">\n                    <div className=\"images\">\n                        {this.state.images.map(image => (\n                            <Image\n                                key={image.id}\n                                clicked={this.clicked}\n                                image={image}\n                            />\n                        ))}\n                    </div>\n                </div>\n                \n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}